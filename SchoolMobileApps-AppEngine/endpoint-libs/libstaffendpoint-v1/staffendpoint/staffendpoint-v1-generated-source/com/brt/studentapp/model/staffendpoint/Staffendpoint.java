/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2014-07-22 21:53:01 UTC)
 * on 2014-10-20 at 09:44:05 UTC 
 * Modify at your own risk.
 */

package com.brt.studentapp.model.staffendpoint;

/**
 * Service definition for Staffendpoint (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link StaffendpointRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Staffendpoint extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.18.0-rc of the staffendpoint library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://hzb-branch-721.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "staffendpoint/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Staffendpoint(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Staffendpoint(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "getStaff".
   *
   * This request holds the parameters needed by the staffendpoint server.  After setting any optional
   * parameters, call the {@link GetStaff#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetStaff getStaff(java.lang.Long id) throws java.io.IOException {
    GetStaff result = new GetStaff(id);
    initialize(result);
    return result;
  }

  public class GetStaff extends StaffendpointRequest<com.brt.studentapp.model.staffendpoint.model.Staff> {

    private static final String REST_PATH = "get_staff";

    /**
     * Create a request for the method "getStaff".
     *
     * This request holds the parameters needed by the the staffendpoint server.  After setting any
     * optional parameters, call the {@link GetStaff#execute()} method to invoke the remote operation.
     * <p> {@link
     * GetStaff#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetStaff(java.lang.Long id) {
      super(Staffendpoint.this, "GET", REST_PATH, null, com.brt.studentapp.model.staffendpoint.model.Staff.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetStaff setAlt(java.lang.String alt) {
      return (GetStaff) super.setAlt(alt);
    }

    @Override
    public GetStaff setFields(java.lang.String fields) {
      return (GetStaff) super.setFields(fields);
    }

    @Override
    public GetStaff setKey(java.lang.String key) {
      return (GetStaff) super.setKey(key);
    }

    @Override
    public GetStaff setOauthToken(java.lang.String oauthToken) {
      return (GetStaff) super.setOauthToken(oauthToken);
    }

    @Override
    public GetStaff setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetStaff) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetStaff setQuotaUser(java.lang.String quotaUser) {
      return (GetStaff) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetStaff setUserIp(java.lang.String userIp) {
      return (GetStaff) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetStaff setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetStaff set(String parameterName, Object value) {
      return (GetStaff) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getStaffByKey".
   *
   * This request holds the parameters needed by the staffendpoint server.  After setting any optional
   * parameters, call the {@link GetStaffByKey#execute()} method to invoke the remote operation.
   *
   * @param kind
   * @param name
   * @return the request
   */
  public GetStaffByKey getStaffByKey(java.lang.String kind, java.lang.String name) throws java.io.IOException {
    GetStaffByKey result = new GetStaffByKey(kind, name);
    initialize(result);
    return result;
  }

  public class GetStaffByKey extends StaffendpointRequest<com.brt.studentapp.model.staffendpoint.model.Staff> {

    private static final String REST_PATH = "get_staff_by_key";

    /**
     * Create a request for the method "getStaffByKey".
     *
     * This request holds the parameters needed by the the staffendpoint server.  After setting any
     * optional parameters, call the {@link GetStaffByKey#execute()} method to invoke the remote
     * operation. <p> {@link GetStaffByKey#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param kind
     * @param name
     * @since 1.13
     */
    protected GetStaffByKey(java.lang.String kind, java.lang.String name) {
      super(Staffendpoint.this, "GET", REST_PATH, null, com.brt.studentapp.model.staffendpoint.model.Staff.class);
      this.kind = com.google.api.client.util.Preconditions.checkNotNull(kind, "Required parameter kind must be specified.");
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetStaffByKey setAlt(java.lang.String alt) {
      return (GetStaffByKey) super.setAlt(alt);
    }

    @Override
    public GetStaffByKey setFields(java.lang.String fields) {
      return (GetStaffByKey) super.setFields(fields);
    }

    @Override
    public GetStaffByKey setKey(java.lang.String key) {
      return (GetStaffByKey) super.setKey(key);
    }

    @Override
    public GetStaffByKey setOauthToken(java.lang.String oauthToken) {
      return (GetStaffByKey) super.setOauthToken(oauthToken);
    }

    @Override
    public GetStaffByKey setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetStaffByKey) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetStaffByKey setQuotaUser(java.lang.String quotaUser) {
      return (GetStaffByKey) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetStaffByKey setUserIp(java.lang.String userIp) {
      return (GetStaffByKey) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String kind;

    /**

     */
    public java.lang.String getKind() {
      return kind;
    }

    public GetStaffByKey setKind(java.lang.String kind) {
      this.kind = kind;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public GetStaffByKey setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @Override
    public GetStaffByKey set(String parameterName, Object value) {
      return (GetStaffByKey) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertStaff".
   *
   * This request holds the parameters needed by the staffendpoint server.  After setting any optional
   * parameters, call the {@link InsertStaff#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.brt.studentapp.model.staffendpoint.model.Staff}
   * @return the request
   */
  public InsertStaff insertStaff(com.brt.studentapp.model.staffendpoint.model.Staff content) throws java.io.IOException {
    InsertStaff result = new InsertStaff(content);
    initialize(result);
    return result;
  }

  public class InsertStaff extends StaffendpointRequest<com.brt.studentapp.model.staffendpoint.model.Staff> {

    private static final String REST_PATH = "insert_staff";

    /**
     * Create a request for the method "insertStaff".
     *
     * This request holds the parameters needed by the the staffendpoint server.  After setting any
     * optional parameters, call the {@link InsertStaff#execute()} method to invoke the remote
     * operation. <p> {@link
     * InsertStaff#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.brt.studentapp.model.staffendpoint.model.Staff}
     * @since 1.13
     */
    protected InsertStaff(com.brt.studentapp.model.staffendpoint.model.Staff content) {
      super(Staffendpoint.this, "POST", REST_PATH, content, com.brt.studentapp.model.staffendpoint.model.Staff.class);
    }

    @Override
    public InsertStaff setAlt(java.lang.String alt) {
      return (InsertStaff) super.setAlt(alt);
    }

    @Override
    public InsertStaff setFields(java.lang.String fields) {
      return (InsertStaff) super.setFields(fields);
    }

    @Override
    public InsertStaff setKey(java.lang.String key) {
      return (InsertStaff) super.setKey(key);
    }

    @Override
    public InsertStaff setOauthToken(java.lang.String oauthToken) {
      return (InsertStaff) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertStaff setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertStaff) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertStaff setQuotaUser(java.lang.String quotaUser) {
      return (InsertStaff) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertStaff setUserIp(java.lang.String userIp) {
      return (InsertStaff) super.setUserIp(userIp);
    }

    @Override
    public InsertStaff set(String parameterName, Object value) {
      return (InsertStaff) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listStaff".
   *
   * This request holds the parameters needed by the staffendpoint server.  After setting any optional
   * parameters, call the {@link ListStaff#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public ListStaff listStaff() throws java.io.IOException {
    ListStaff result = new ListStaff();
    initialize(result);
    return result;
  }

  public class ListStaff extends StaffendpointRequest<com.brt.studentapp.model.staffendpoint.model.CollectionResponseStaff> {

    private static final String REST_PATH = "list_page";

    /**
     * Create a request for the method "listStaff".
     *
     * This request holds the parameters needed by the the staffendpoint server.  After setting any
     * optional parameters, call the {@link ListStaff#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListStaff#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListStaff() {
      super(Staffendpoint.this, "GET", REST_PATH, null, com.brt.studentapp.model.staffendpoint.model.CollectionResponseStaff.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListStaff setAlt(java.lang.String alt) {
      return (ListStaff) super.setAlt(alt);
    }

    @Override
    public ListStaff setFields(java.lang.String fields) {
      return (ListStaff) super.setFields(fields);
    }

    @Override
    public ListStaff setKey(java.lang.String key) {
      return (ListStaff) super.setKey(key);
    }

    @Override
    public ListStaff setOauthToken(java.lang.String oauthToken) {
      return (ListStaff) super.setOauthToken(oauthToken);
    }

    @Override
    public ListStaff setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListStaff) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListStaff setQuotaUser(java.lang.String quotaUser) {
      return (ListStaff) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListStaff setUserIp(java.lang.String userIp) {
      return (ListStaff) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListStaff setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListStaff setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListStaff set(String parameterName, Object value) {
      return (ListStaff) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeStaff".
   *
   * This request holds the parameters needed by the staffendpoint server.  After setting any optional
   * parameters, call the {@link RemoveStaff#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public RemoveStaff removeStaff(java.lang.Long id) throws java.io.IOException {
    RemoveStaff result = new RemoveStaff(id);
    initialize(result);
    return result;
  }

  public class RemoveStaff extends StaffendpointRequest<Void> {

    private static final String REST_PATH = "remove_staff";

    /**
     * Create a request for the method "removeStaff".
     *
     * This request holds the parameters needed by the the staffendpoint server.  After setting any
     * optional parameters, call the {@link RemoveStaff#execute()} method to invoke the remote
     * operation. <p> {@link
     * RemoveStaff#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveStaff(java.lang.Long id) {
      super(Staffendpoint.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveStaff setAlt(java.lang.String alt) {
      return (RemoveStaff) super.setAlt(alt);
    }

    @Override
    public RemoveStaff setFields(java.lang.String fields) {
      return (RemoveStaff) super.setFields(fields);
    }

    @Override
    public RemoveStaff setKey(java.lang.String key) {
      return (RemoveStaff) super.setKey(key);
    }

    @Override
    public RemoveStaff setOauthToken(java.lang.String oauthToken) {
      return (RemoveStaff) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveStaff setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveStaff) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveStaff setQuotaUser(java.lang.String quotaUser) {
      return (RemoveStaff) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveStaff setUserIp(java.lang.String userIp) {
      return (RemoveStaff) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveStaff setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveStaff set(String parameterName, Object value) {
      return (RemoveStaff) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateStaff".
   *
   * This request holds the parameters needed by the staffendpoint server.  After setting any optional
   * parameters, call the {@link UpdateStaff#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.brt.studentapp.model.staffendpoint.model.Staff}
   * @return the request
   */
  public UpdateStaff updateStaff(com.brt.studentapp.model.staffendpoint.model.Staff content) throws java.io.IOException {
    UpdateStaff result = new UpdateStaff(content);
    initialize(result);
    return result;
  }

  public class UpdateStaff extends StaffendpointRequest<com.brt.studentapp.model.staffendpoint.model.Staff> {

    private static final String REST_PATH = "update_staff";

    /**
     * Create a request for the method "updateStaff".
     *
     * This request holds the parameters needed by the the staffendpoint server.  After setting any
     * optional parameters, call the {@link UpdateStaff#execute()} method to invoke the remote
     * operation. <p> {@link
     * UpdateStaff#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.brt.studentapp.model.staffendpoint.model.Staff}
     * @since 1.13
     */
    protected UpdateStaff(com.brt.studentapp.model.staffendpoint.model.Staff content) {
      super(Staffendpoint.this, "PUT", REST_PATH, content, com.brt.studentapp.model.staffendpoint.model.Staff.class);
    }

    @Override
    public UpdateStaff setAlt(java.lang.String alt) {
      return (UpdateStaff) super.setAlt(alt);
    }

    @Override
    public UpdateStaff setFields(java.lang.String fields) {
      return (UpdateStaff) super.setFields(fields);
    }

    @Override
    public UpdateStaff setKey(java.lang.String key) {
      return (UpdateStaff) super.setKey(key);
    }

    @Override
    public UpdateStaff setOauthToken(java.lang.String oauthToken) {
      return (UpdateStaff) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateStaff setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateStaff) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateStaff setQuotaUser(java.lang.String quotaUser) {
      return (UpdateStaff) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateStaff setUserIp(java.lang.String userIp) {
      return (UpdateStaff) super.setUserIp(userIp);
    }

    @Override
    public UpdateStaff set(String parameterName, Object value) {
      return (UpdateStaff) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link Staffendpoint}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Staffendpoint}. */
    @Override
    public Staffendpoint build() {
      return new Staffendpoint(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link StaffendpointRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setStaffendpointRequestInitializer(
        StaffendpointRequestInitializer staffendpointRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(staffendpointRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
